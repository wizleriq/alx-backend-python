services:
  db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DB: ${MYSQL_DB}  # ✅ required by the checker
    volumes:
      - db_data:/var/lib/mysql

  web:
    build: .
    command: python3 manage.py runserver 0.0.0.0:8000  # ✅ required by the checker
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    env_file:
      - .env

volumes:
  db_data:









# services:
#   db:
#     image: mysql:8.0
#     container_name: messaging_db
#     restart: always
#     environment:
#       MYSQL_DATABASE: ${MYSQL_DATABASE}
#       MYSQL_USER: ${MYSQL_USER}
#       MYSQL_PASSWORD: ${MYSQL_PASSWORD}
#       MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
#     ports:
#       - "3306:3306"
#     volumes:
#       - db_data:/var/lib/mysql

#   web:
#     build: .
#     container_name: messaging_web
#     command: python manage.py runserver 0.0.0.0:8000
#     volumes:
#       - .:/app
#     ports:
#       - "8010:8000"
#     depends_on:
#       - db
#     env_file:
#       - .env

# volumes:
#   db_data:







# version: '3.8'

# services:
#   db:
#     image: mysql:8.0
#     container_name: messaging_db
#     restart: always
#     environment:
#       MYSQL_DATABASE: ${MYSQL_DATABASE}
#       MYSQL_USER: ${MYSQL_USER}
#       MYSQL_PASSWORD: ${MYSQL_PASSWORD}
#       MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
#     ports:
#       - "3306:3306"
#     volumes:
#       - db_data:/var/lib/mysql

#   web:
#     build: .
#     container_name: messaging_web
#     command: python manage.py runserver 0.0.0.0:8000
#     volumes:
#       - .:/app
#     ports:
#       - "8000:8000"
#     depends_on:
#       - db
#     env_file:
#       - .env

# volumes:
#   db_data:
